AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 en subnet privada con acceso por SSM para administración de Aurora

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Type: AWS::EC2::Subnet::Id 
  AuroraSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id 

Resources:

  # IAM Role para EC2 con acceso a Systems Manager
  EC2SSMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2SSMRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2SSMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2SSMRole

  # Security Group para EC2 privada (permite tráfico hacia Aurora)
  EC2InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG para EC2 privada con acceso a Aurora
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/16
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          DestinationSecurityGroupId: !Ref AuroraSecurityGroupId
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  # Instancia EC2 en subnet privada
  BastionEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      ImageId: !Sub "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2}}"
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref EC2InstanceSecurityGroup
      IamInstanceProfile: !Ref EC2SSMInstanceProfile
      Tags:
        - Key: Name
          Value: bastion-ssm
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          systemctl restart amazon-ssm-agent

  #VPC Endpoints para que el EC2 pueda usar el servicio SSM
  SSMVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref SubnetId
      SecurityGroupIds:
        - !Ref EC2InstanceSecurityGroup
      PrivateDnsEnabled: true

  SSMMessagesVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref SubnetId
      SecurityGroupIds:
        - !Ref EC2InstanceSecurityGroup
      PrivateDnsEnabled: true

  EC2MessagesVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2messages
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref SubnetId
      SecurityGroupIds:
        - !Ref EC2InstanceSecurityGroup
      PrivateDnsEnabled: true

Outputs:
  EC2InstanceId:
    Description: ID de la EC2 privada
    Value: !Ref BastionEC2
  RoleName:
    Description: IAM Role para EC2 SSM
    Value: !Ref EC2SSMRole
